Adjust the mpm_prefork_module or mpm_worker_module Configuration:
Depending on your server workload, you can use either the prefork or worker MPM (Multi-Processing Module). The worker MPM is generally better for performance.

For mpm_worker_module:

apache conf
------------
<IfModule mpm_worker_module>
    StartServers             4
    MinSpareThreads         25
    MaxSpareThreads         75
    ThreadLimit             64
    ThreadsPerChild         25
    MaxRequestWorkers      150
    MaxConnectionsPerChild   0
</IfModule>

For mpm_prefork_module:

apache conf
------------
<IfModule mpm_prefork_module>
    StartServers             4
    MinSpareServers          5
    MaxSpareServers         10
    MaxRequestWorkers      150
    MaxConnectionsPerChild   0
</IfModule>

Enable KeepAlive and Adjust KeepAlive Settings:
KeepAlive allows multiple requests to be sent over the same TCP connection, which can improve performance for users who request multiple resources.

apache conf
------------
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 5

Optimize Timeout Directive:
Adjust the Timeout directive to a lower value to free up resources more quickly in case of long-running requests.

apache conf
------------
Timeout 60

Enable Gzip Compression:
Compressing content can significantly reduce the amount of data sent over the network, improving load times for users.

apache conf
------------
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript
</IfModule>

Optimize Caching:
Enable caching to reduce load times for frequently requested content.

apache conf
------------
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType text/css "access plus 1 week"
    ExpiresByType application/javascript "access plus 1 week"
    ExpiresByType text/html "access plus 1 minute"
</IfModule>

Tune the MaxRequestWorkers Directive:
Calculate an appropriate value for MaxRequestWorkers based on available memory.

apache conf
------------
# Max memory per Apache process (e.g., 50 MB per process)
MemoryPerProcess 50

# Calculate MaxRequestWorkers
MaxRequestWorkers = Total RAM / MemoryPerProcess

Example:

apache conf
------------
MaxRequestWorkers 160

Disable Unnecessary Modules:
Only load the modules you need to reduce memory usage and improve performance. Disable unused modules in the configuration files.

apache conf
------------
# Comment out or remove unused modules
# LoadModule status_module modules/mod_status.so

Use mod_status for Monitoring:
Enable mod_status to monitor your Apache server's performance and tweak settings based on real-time data.

apache conf
------------
<Location /server-status>
    SetHandler server-status
    Require ip 127.0.0.1
</Location>

Optimize HostnameLookups:
Disable hostname lookups to save on DNS resolution time.

apache conf
------------
HostnameLookups Off

File Descriptors:
Ensure the number of file descriptors is adequate for your expected load. Increase the file descriptor limit if necessary.

shell command
------------
    # Add to /etc/security/limits.conf
    apache soft nofile 4096
    apache hard nofile 8192

After making these changes, restart Apache to apply the new configuration:

shell command
------------
sudo systemctl restart httpd

Additionally, monitor your serverâ€™s performance and adjust these settings as needed based on real-time data and server load.